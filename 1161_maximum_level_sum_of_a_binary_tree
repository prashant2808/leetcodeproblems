/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> q= new  LinkedList<>();
        if(root==null)return 0;
        int maxsum=Integer.MIN_VALUE;
        int maxlev=1;
        q.offer(root);
        int level=1;

        while(!q.isEmpty())
        {
            int sum=0;
            int t=q.size();
            for(int i=0;i<t;i++)
            {
                TreeNode node =q.peek();
                sum+=node.val;
                if(node.left!=null)
                {
                    q.offer(node.left);
                }
                if(node.right!=null)
                {
                    q.offer(node.right);
                }
                q.poll();
            }
            if(sum>maxsum)
            {
                maxsum=sum;
                maxlev=level;
            }
            level++;
        }
        return maxlev;
         
         
    }
}
