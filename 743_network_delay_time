class Solution {
    public int networkDelayTime(int[][] times, int n, int k) {
        int [] dist= new int[n+1];
        for(int i=1;i<=n;i++)
        {
            dist[i]=Integer.MAX_VALUE;
        }
        dist[k]=0;
        for(int i=0;i<n-1;i++)
        {
            for(int[] al:times)
            {
                 int u=al[0];
                int v=al[1];
                int wt=al[2];
                if(dist[u]!=Integer.MAX_VALUE&&dist[u]+wt<dist[v])
                {
                    dist[v]=dist[u]+wt;
                }
            }
        }
         int max=Integer.MIN_VALUE;
         for(int i=1;i<=n;i++)
         {
             if(dist[i]==Integer.MAX_VALUE)return -1;
             max=Math.max(max,dist[i]);
         }
         return max;
    }
}
