lass Solution {
    public int[] findRightInterval(int[][] intervals) {
        int l=intervals.length;
        
         HashMap<Integer,Integer> map = new HashMap<>();
          int temp[] = new int [l];
         for(int i=0;i<l;i++)
         {
              temp[i]=intervals[i][0];
             map.put(intervals[i][0],i);
         }
         Arrays.sort(temp);
         int arr[] = new int [l];
         for(int i=0;i<l;i++)
         {
               int res=bsearch(temp,intervals[i][1]);
               if(res==temp.length)
               arr[i]=-1;
               else if(res==0)
               {
                   if(temp[0]>=intervals[i][1])
                   arr[i]=map.get(temp[0]);
                   else 
                   arr[i]=-1;
               }
               else 
               arr[i]=map.get(temp[res]);

         }
        
        return arr;
        
    }
    int bsearch(int [] arr ,int target)
    {
        int start=0;
        int end=arr.length-1;
         
        while(start<=end)
        {
            int mid =start+(end-start)/2;
            if(arr[mid]<target)
            {
                
                start=mid+1;
            }
            else 
            {
                end=mid-1;
            }
              
        }
         return start;

    }
}
