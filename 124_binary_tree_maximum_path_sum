/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxPathSum(TreeNode root) {
        int[] maxvalue = new  int [1];
        maxvalue[0]= Integer.MIN_VALUE;
        findmax(root,maxvalue);
        return maxvalue[0];
        
    }
    int findmax(TreeNode root,int[] maxvalue)
    {
        if(root==null)return 0;
        int lsum=Math.max(findmax(root.left,maxvalue),0);
        int rsum=Math.max(findmax(root.right,maxvalue),0);
        maxvalue[0]=Math.max(maxvalue[0],lsum+rsum+root.val);
        return root.val+Math.max(lsum,rsum);
    }
}
