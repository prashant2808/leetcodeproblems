/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        Queue<TreeNode> q= new LinkedList<>();
        q.offer(root);
        while(!q.isEmpty())
        {
            
            ArrayList<Integer> temp= new ArrayList<>();
            int levelsize=q.size();
            for(int i=0;i<levelsize;i++)
            {
                TreeNode node = q.peek();
                if(node.left!=null)
                {
                    q.offer(node.left);
                    
                }
                if(node.right!=null)
                {
                    q.offer(node.right); 
                }
                temp.add(q.poll().val);
            }
            res.add(temp);
        }
        return res.get(res.size()-1).get(0);
        
    }
}
