/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<TreeNode> delNodes(TreeNode root, int[] to_delete) {
     HashSet<Integer> set = new HashSet<>();
     List<TreeNode> res = new ArrayList<>();
     for(int i=0;i<to_delete.length;i++)
     {
          set.add(to_delete[i]);
     }
     delete(root,set,res);
     if(!set.contains(root.val))
     {
          res.add(root);
     } 
     return res;

        
    }
    public TreeNode delete(TreeNode root,HashSet<Integer> set,List<TreeNode>res)
    {
         if(root==null)return null;
         root.left=delete(root.left,set,res);
         root.right=delete(root.right,set,res);
         if(set.contains(root.val))
         {
              if(root.left!=null)res.add(root.left);
              if(root.right!=null)res.add(root.right);
              return null;
         }
         return root;

    }
}
