/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
   
        List<List<Integer>> res= new LinkedList<List<Integer>>();
        Queue<TreeNode> q= new LinkedList<TreeNode>();
        if(root==null)
        return  res;
        q.offer(root);
        int count=0;
         
        while(!q.isEmpty())
        {
             
            List<Integer> temp = new LinkedList<Integer>();
            int levelsize=q.size();
            for(int i=0;i<levelsize;i++)
            {
                TreeNode current =q.peek();
                if(current.left!=null)
                {
                    q.offer(current.left);
                }
                 if(current.right!=null)
                {
                    q.offer(current.right);
                }
                if(count%2==0)
                temp.add(q.poll().val);
                else
                temp.add(0,q.poll().val);
            }
             
            res.add(temp);
            count++;
        }
        return res;
        
    
    }
}
