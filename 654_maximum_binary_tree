/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return recurse(nums,0,nums.length-1);
         
        
    }
    TreeNode recurse(int []arr ,int i,int j)
    {
        if(i>j)return null;
        int index=findmax(arr,i,j);
        TreeNode root= new TreeNode(arr[index]);
        root.left=recurse(arr,i,index-1);
        root.right=recurse(arr,index+1,j);
        return root;
        

    }
    int findmax(int [] arr ,int i,int j)
    {
        int index=i;
        int max=Integer.MIN_VALUE;
        for(int k=i;k<=j;k++)
        {
            if(max<arr[k])
            {
                max=arr[k];
                index=k;
            }
        }
        return index;
    }
}
