/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<List<Integer>> res = new ArrayList<>();
        if(root==null)return res;
        path(root,res,0,targetSum,new ArrayList<>());
        return res;

        
    }
    void path(TreeNode root,List<List<Integer>> res,int pathsum,int targetsum,List<Integer> curr)
    {
         if(root==null)return;
          pathsum+=root.val;
         curr.add(root.val);
         if(root.left==null&root.right==null)
         {
              if(pathsum==targetsum)
              {
                  res.add(new ArrayList(curr));
              }
         }
         path(root.left,res,pathsum,targetsum,curr);
         path(root.right,res,pathsum,targetsum,curr);
         curr.remove(curr.size()-1);

          

    }
}
