class Solution {
    public int uniquePathsIII(int[][] grid) {
        int x=-1;
        int y=-1;
        int empty=0;
        for(int i=0;i<grid.length;i++)
        {
            for(int j=0;j<grid[0].length;j++)
            {
                if(grid[i][j]==1)
                {
                    x=i;
                    y=j;

                }
                if(grid[i][j]==0)
                empty++;

            }
        }
        int count=0;

       return backtrack(grid,x,y,empty);
        


        
    }
    int  backtrack(int [][]grid,int i,int j,int empty)
    {
        if(i<0||i>=grid.length||j<0||j>=grid[0].length||grid[i][j]==-1)
        return 0;
        if(grid[i][j]==2)
        return empty==-1?1:0;
        grid[i][j]=-1;
        empty--;
        int count =backtrack(grid,i+1,j,empty)+backtrack(grid,i,j+1,empty)+backtrack(grid,i-1,j,empty)+backtrack(grid,i,j-1,empty);
        grid[i][j]=0;
        return count;
         
    }
}
