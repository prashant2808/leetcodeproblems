/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode balanceBST(TreeNode root) {
        ArrayList<Integer> res= new ArrayList<>();
        if(root==null)return null;
        inorder(root,res);
        return create(res,0,res.size()-1);
        
    }
    void inorder(TreeNode root,ArrayList<Integer> list)
    {
        if(root==null)return;
        inorder(root.left,list);
        list.add(root.val);
        inorder(root.right,list);
    }
    TreeNode create(ArrayList<Integer> list,int start,int end)
    {
        if(start>end)return null;
        int mid=start+(end-start)/2;
        TreeNode root=new TreeNode(list.get(mid));
        root.left=create(list,start,mid-1);
        root.right=create(list,mid+1,end);
        return root;
    }
}
