class Solution {
    public int superEggDrop(int k, int n) {
        int dp[][]= new int [k+1][n+1];
        for(int [] arr:dp)Arrays.fill(arr,-1);
        return solve(k,n,dp);

    }
    int solve(int eggs,int floors,int [][]dp)
    {
        if(eggs==1||floors==1||floors==0)return floors;
        if(dp[eggs][floors]!=-1)return dp[eggs][floors];
        int min=Integer.MAX_VALUE;
        int l=1;
        int r=floors;
        while(l<=r)
        {
            int mid=(l+r)/2;
            int left=solve(eggs-1,mid-1,dp);
            int right=solve(eggs,floors-mid,dp);
            int val=1+Math.max(left,right);
            if(left<right)l=mid+1;
            else
            r=mid-1;
            min=Math.min(val,min);
        }
        return dp[eggs][floors]=min;
    }
}
