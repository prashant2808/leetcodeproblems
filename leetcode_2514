class Solution {
    int mod =1000000007;
     long [] fact = new long [1000001];
     private void precompute()
     {
         fact[0]=fact[1]=1;
         for(int i=2;i<fact.length;i++)
         {
             fact[i]=(fact[i-1]*i)%mod;
         }
     }
     int gcd(int a,int b)
     {
         if(b==0)
         return a;
         return gcd(b,a%b);
     }
     long pow(long x,long y,long p)
     {
         long res=1;
         x=x%p;
         while(y>0)
         {
             if((y&1)>0)
             {
                 res=(res*x)%p;
             }
             y>>=1;
             x=(x*x)%p;
         }
         return res;
     }
     int modinverse(int b,int m)
     {
         int g=gcd(b,m);
         if(g!=1)
         {
             return -1;
         }
         else return (int)pow(b,m-2,m);
     }
     private int getct(String s)
     {
         int freq[]= new int [26];
         for(int i=0;i<s.length();i++)
         {
             char ch= s.charAt(i);
             freq[ch-'a']++;
         }
         long num=fact[s.length()]%mod;
         long den=1;
         for(int i=0;i<26;i++)
         {
             if(freq[i]>0)
             {
                 den =(den*fact[freq[i]])%mod;
             }

         }
         int inv=modinverse((int)den,mod);
         long ans=((long)inv*num)%mod;
         return (int)ans;
     }
    public int countAnagrams(String s) {
        String words[]= s.split(" ");
        long ans=1;
        precompute();
        for(String word:words)
        {

            ans=(ans*getct(word))%mod;
        }
        return (int)ans;
       
    }
}
